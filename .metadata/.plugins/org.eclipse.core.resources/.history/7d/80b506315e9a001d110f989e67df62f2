package practice;

class BSTNode{
	int data;
	BSTNode left,right;
	BSTNode(int data){
		this.data = data;
		left = null;
		right = null;
	}
}

class BinarySearchTree{
	BSTNode root;
	
	public BinarySearchTree() {
		this.root = null;
	}
	
	BSTNode insertNode(int data){
		if(root == null) {
			root = new BSTNode(data);
			return root;
			
		}
		if(root.data<data) root.right = insertNode(data);
		if(root.data>data) root.left = insertNode(data);
		
		return root;
	}
	
	static boolean searchNode(int data, BSTNode root) {
		if(root == null) return false;
		if(root.data == data) return true;
		
		if(root.data>data) return searchNode(data,root.left);
		return searchNode(data, root.right);
	}
	
	static BSTNode deleteNode(BSTNode root,int data) {
		if(root == null) return root;
		
		if(root.data > data) root.left = deleteNode(root.left,data);
		if(root.data < data) root.right = deleteNode(root.right,data);
	}
	
	
}

public class BSTProgram {
	public static void main(String[] args) {
		
	
	}
}
 